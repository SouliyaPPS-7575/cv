/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SkillsImport } from './routes/skills'
import { Route as ProjectsImport } from './routes/projects'
import { Route as HomeImport } from './routes/home'
import { Route as ExperienceImport } from './routes/experience'
import { Route as EducationImport } from './routes/education'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SkillsRoute = SkillsImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const ExperienceRoute = ExperienceImport.update({
  id: '/experience',
  path: '/experience',
  getParentRoute: () => rootRoute,
} as any)

const EducationRoute = EducationImport.update({
  id: '/education',
  path: '/education',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/education': {
      id: '/education'
      path: '/education'
      fullPath: '/education'
      preLoaderRoute: typeof EducationImport
      parentRoute: typeof rootRoute
    }
    '/experience': {
      id: '/experience'
      path: '/experience'
      fullPath: '/experience'
      preLoaderRoute: typeof ExperienceImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/skills': {
      id: '/skills'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof SkillsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/education': typeof EducationRoute
  '/experience': typeof ExperienceRoute
  '/home': typeof HomeRoute
  '/projects': typeof ProjectsRoute
  '/skills': typeof SkillsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/education': typeof EducationRoute
  '/experience': typeof ExperienceRoute
  '/home': typeof HomeRoute
  '/projects': typeof ProjectsRoute
  '/skills': typeof SkillsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/education': typeof EducationRoute
  '/experience': typeof ExperienceRoute
  '/home': typeof HomeRoute
  '/projects': typeof ProjectsRoute
  '/skills': typeof SkillsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/education'
    | '/experience'
    | '/home'
    | '/projects'
    | '/skills'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/education'
    | '/experience'
    | '/home'
    | '/projects'
    | '/skills'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/education'
    | '/experience'
    | '/home'
    | '/projects'
    | '/skills'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  EducationRoute: typeof EducationRoute
  ExperienceRoute: typeof ExperienceRoute
  HomeRoute: typeof HomeRoute
  ProjectsRoute: typeof ProjectsRoute
  SkillsRoute: typeof SkillsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  EducationRoute: EducationRoute,
  ExperienceRoute: ExperienceRoute,
  HomeRoute: HomeRoute,
  ProjectsRoute: ProjectsRoute,
  SkillsRoute: SkillsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/education",
        "/experience",
        "/home",
        "/projects",
        "/skills"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/education": {
      "filePath": "education.tsx"
    },
    "/experience": {
      "filePath": "experience.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/skills": {
      "filePath": "skills.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
